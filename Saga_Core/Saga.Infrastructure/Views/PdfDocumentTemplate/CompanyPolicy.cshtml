@using Saga.Domain.Entities.Organizations
@using Saga.Infrastructure.Constants;
@model Saga.Domain.ViewModels.Organizations.CompanyPolicyReport

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Company Policy Report</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }
        .header-row {
            display: table;
            width: 100%;
            margin-bottom: 20px;
            border-bottom: 1px solid #e0e0e0;
            padding-bottom: 10px;
        }
        .header-column {
            display: table-cell;
            vertical-align: middle;
            text-align: center;
        }
        .header-left {
            max-width: 25%;
            text-align: left;
        }
        .header-left img {
            max-width: 190px;
            height: auto;
        }
        .header-right {
            max-width: 75%;
            padding-right: 30px;
            text-align: left;
        }
        .header-right h4 {
            margin: 0;
            font-size: 18px;
        }
        .policy-container {
            margin-bottom: 30px;
            page-break-inside: avoid;
        }
        .company-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
        }
        .policy-header {
            background-color: #f8f8f8;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .info-label {
            font-weight: bold;
            color: #555;
            display: inline-block;
            width: 150px;
        }
        .info-value {
            color: #333;
        }
        .policy-text {
            text-align: justify;
            font-size: 12px;
        }
        .policy-text p {
            margin-bottom: 15px;
        }
        .page-footer {
            text-align: right;
            font-size: 10px;
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 100%;
            color: #888;
        }
        .page-break {
            page-break-before: always;
        }
    </style>
</head>
<body>
    <div class="header-row">
        <div class="header-column header-left">
            <img src="@Url.Content(PathDirectory.Logo)">
        </div>
        <div class="header-column header-right">
            <h4>Company Policy Report</h4>
        </div>
    </div>

    @if (Model.CompanyPolicies != null && Model.CompanyPolicies.Any())
    {
        var policy = Model.CompanyPolicies.First();

        var effectiveDate = policy.EffectiveDate.HasValue 
            ? policy.EffectiveDate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("id-ID")) 
            : String.Empty;
        var expiredDate = policy.ExpiredDate.HasValue 
            ? policy.ExpiredDate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("id-ID")) 
            : String.Empty;

        // Convert plain text to paragraphs
        var paragraphs = policy.Policy?.Split(new[] { "\r\n", "\r", "\n" }, StringSplitOptions.None) 
            ?? new string[] { };

        <div class="policy-container">
            <div class="company-name">
                @policy.CompanyName
            </div>
            <div class="policy-header">
                <div>
                    <span class="info-label">Organization:</span>
                    <span class="info-value">@policy.OrganizationName</span>
                </div>
                <div>
                    <span class="info-label">Effective Date:</span>
                    <span class="info-value">@effectiveDate</span>
                </div>
                <div>
                    <span class="info-label">Expired Date:</span>
                    <span class="info-value">@expiredDate</span>
                </div>
            </div>
            <h2>Policy</h2>
            <div class="policy-text">
                @foreach (var paragraph in paragraphs.Where(p => !string.IsNullOrWhiteSpace(p)))
                {
                    <p>@paragraph</p>
                }
            </div>
        </div>
    }

    <div class="page-footer">
        @(Context.Request.Query["page"])
    </div>
</body>
</html>